server:
  port: 8080

spring:
  # -----------------------------------------------------------------
  # 1. Database Configuration (Fix for the ServiceException)
  # NOTE: Replace 'your_username' and 'your_password' with actual credentials.
  # -----------------------------------------------------------------
  datasource:
    url: jdbc:mysql://localhost:3306/bus_booking_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    username: root  # IMPORTANT: Change this
    password:   # IMPORTANT: Change this
    driver-class-name: com.mysql.cj.jdbc.Driver

  # -----------------------------------------------------------------
  # 2. JPA/Hibernate Configuration
  # -----------------------------------------------------------------
  jpa:
    hibernate:
      # Automatically execute schema.sql and data.sql on startup
      ddl-auto: update # 'update' is safe for development; use 'none' for production
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      # CRITICAL: Specifies the dialect for MySQL 8
      hibernate.dialect: org.hibernate.dialect.MySQLDialect
    show-sql: true
    # Load schema.sql and data.sql on startup
    defer-datasource-initialization: true

  sql:
    init:
      mode: always

  # -----------------------------------------------------------------
  # 3. Redis Configuration (For Redisson Distributed Locking)
  # -----------------------------------------------------------------
  redis:
    host: 127.0.0.1
    port: 6379

  elasticsearch:
    client:
      cloud:
        id: 4c722c35bf4d4e6d93c82ebbe227fa50:dXMtY2VudHJhbDEuZ2NwLmNsb3VkLmVzLmlvOjQ0MyQzZWJhOTE1ZGI5Y2E0ZDcyYjI5NDNkYTJkYTY0YmIwOSQyNzgzYzFjNGZmNzU0MTM3YWNmMmIyODBhMjM2ODk2NQ==
      api-key: UHN5M2laa0JYYnNWSHBMQllYaHo6RkdLcjRKdXNYN3BfX3dKZ3cwUmdKQQ==
      protocol: https
    connection-timeout: 10s
    rest:
      uris: https://3eba915db9ca4d72b2943da2da64bb09.us-central1.gcp.cloud.es.io:443

es:
  cloud.id: 4c722c35bf4d4e6d93c82ebbe227fa50:dXMtY2VudHJhbDEuZ2NwLmNsb3VkLmVzLmlvOjQ0MyQzZWJhOTE1ZGI5Y2E0ZDcyYjI5NDNkYTJkYTY0YmIwOSQyNzgzYzFjNGZmNzU0MTM3YWNmMmIyODBhMjM2ODk2NQ==
  api-key: UHN5M2laa0JYYnNWSHBMQllYaHo6RkdLcjRKdXNYN3BfX3dKZ3cwUmdKQQ==


  # -----------------------------------------------------------------
  # 4. Global Logging Configuration
  # -----------------------------------------------------------------
logging:
  level:
    root: INFO
    com.busbooking: DEBUG # DEBUG logs for our custom application code
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG # Shows all executed SQL statements
    org:
      springframework:
        data:
          elasticsearch: DEBUG # DEBUG logs for Elasticsearch operations
      elasticsearch:
        client:
          RestClient: TRACE

# -----------------------------------------------------------------
# 5. OpenAPI/Swagger UI Configuration
# -----------------------------------------------------------------
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs
